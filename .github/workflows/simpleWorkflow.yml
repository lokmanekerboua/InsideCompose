name: Android Release Build

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      version_name:
        description: 'Version name for the release'
        required: true
        default: '1.0.0'
    
jobs:
  build:
    name: build the application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v2
      
    - name: Create keystore from secrets
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore.jks
      
    - name: Create keystore.properties
      run: |
        echo "storeFile=keystore.jks" >> keystore.properties
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties
        
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Build Release AAB
      run: ./gradlew bundleRelease
      
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"
        
    - name: Get version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="${{ github.event.inputs.version_name }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Rename APK
      run: |
        cd app/build/outputs/apk/release
        mv app-release-unsigned-signed.apk "MyApp-${{ steps.version.outputs.version }}.apk"
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/MyApp-${{ steps.version.outputs.version }}.apk
        
    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: app/build/outputs/bundle/release/app-release.aab
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app/build/outputs/apk/release/MyApp-${{ steps.version.outputs.version }}.apk
          app/build/outputs/bundle/release/app-release.aab
        name: Release ${{ steps.version.outputs.version }}
        tag_name: ${{ steps.version.outputs.version }}
        body: |
          ## Release ${{ steps.version.outputs.version }}
          
          ### Changes
          - Add your release notes here
          
          ### Downloads
          - **APK**: For direct installation on Android devices
          - **AAB**: For Google Play Store distribution
          
          Built with:
          - Kotlin 2.1.20
          - Gradle 8.10.2
          - JVM 21
          - Jetpack Compose
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
